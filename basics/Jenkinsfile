
pipeline {
   agent any
   environment {
     def commit_id = ''
   }
   stages{
     stage('Preparation') {
       steps {
         script {
           checkout scm
           sh "git rev-parse --short HEAD > .git/commit-id"
           commit_id = readFile('.git/commit-id').trim()
         }
       }
     }
     stage("DB and SQ in parallel") {
       parallel {
         stage('dockerbuild') {
           steps {
             script {
               def app = docker.build("yanivomc/docker-nodejs-demo:${commit_id}", './basics')
             }
           } 
         }
         stage('sonarqube tests') {
           steps {
             echo "this is the sonarqube build step"
           }
         }                                     
       }
     }
     stage('docker build/push') {            
       steps {
         echo "this is the docker build/push step"
       }
     }     
   }
}      
